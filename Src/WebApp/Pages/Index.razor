@page "/"
@using Isitar.RoomPlanner.Logic.Models
@using Microsoft.AspNetCore.Components.Forms
@using System.Text.Json
@using Newtonsoft.Json
@inject NavigationManager NavigationManager
@inject AppState AppState

<div class="hero is-fullheight-with-navbar">
    <div class="hero-body">
        <div>
        <p class="title">Room planner</p>
            <p class="subtitle">
                <button class="button is-success " @onclick="NewPlan">New Plan</button>
                <button class="button is-success" @onclick="LoadPlan">Load Plan</button>
            </p>
        </div>
    </div>
    <div class="modal @(loadPlanOpen ? "is-active" : "")">
        <div class="modal-background"></div>
        <div class="modal-content">
            <div class="box">
                <div>
                    <InputFile type="file" OnChange="@SetLoadedPlan"/>
                </div>
                <div>
                <button type="button" class="button is-success">Ok</button>
                    <button type="button" class="button is-danger" @onclick="() => loadPlanOpen = false">Cancel</button>
                    </div>
            </div>
            
        </div>
    </div>
</div>

<div class="has-text-centered">
</div>

@code
{
    public void NewPlan()
    {
        AppState.Plan = new Plan("New Plan");
        NavigationManager.NavigateTo("planner");
    }

    private bool loadPlanOpen;
    private async Task SetLoadedPlan(InputFileChangeEventArgs e)
    {
        using var ms = new MemoryStream();
        await e.File.OpenReadStream().CopyToAsync(ms);
        var content  = System.Text.Encoding.UTF8.GetString(ms.GetBuffer());
        AppState.Plan = JsonConvert.DeserializeObject<Plan>(content);
        NavigationManager.NavigateTo("planner");
    }
    public void LoadPlan()
    {
        loadPlanOpen = true;
    }
    
}
